
---- Ensure mason and mason-lspconfig are set up
--require("mason").setup()
--require("mason-lspconfig").setup({
  --ensure_installed = { "pyright" },
--})

---- Set up LSP config
--local lspconfig = require("lspconfig")

---- Enable pyright for Python
--lspconfig.pyright.setup({
  --capabilities = require("cmp_nvim_lsp").default_capabilities(),
  --settings = {
    --python = {
      --analysis = {
        --autoSearchPaths = true,
        --useLibraryCodeForTypes = true,
        --diagnosticMode = "workspace",
      --},
    --},
  --},
  --root_dir = function(fname)
    --return lspconfig.util.find_git_ancestor(fname) or vim.loop.cwd()
  --end,
--})

---- Enable rust-analyzer, using the system-installed version
--lspconfig.rust_analyzer.setup({
  --cmd = { "rust-analyzer" },  -- This assumes rust-analyzer is installed in PATH via Nix
  --capabilities = require("cmp_nvim_lsp").default_capabilities(),
  --settings = {
    --["rust-analyzer"] = {
      --cargo = { allFeatures = true },
      --procMacro = {
        --enable = false,  -- Disable proc-macro expansion
      --},
      --checkOnSave = {
        --command = "clippy",
      --},
    --},
  --},
  --root_dir = function(fname)
    --return lspconfig.util.find_git_ancestor(fname) or vim.loop.cwd()
  --end,
--})
-- ~/.config/nvim/lua/config/lsp.lua

-- If needed, set up basic LSP configurations here
-- You can customize or add specific language servers as needed
local lspconfig = require("lspconfig")

-- Placeholder function for project-specific LSP setup
local function setup_lsp(server, config)
  lspconfig[server].setup(config)
end

-- Example of how to set up an LSP manually (uncomment to use)
-- setup_lsp("pyright", {
--   capabilities = require("cmp_nvim_lsp").default_capabilities(),
--   settings = { python = { analysis = { autoSearchPaths = true } } },
-- })

-- setup_lsp("rust_analyzer", {
--   cmd = { "rust-analyzer" },
--   capabilities = require("cmp_nvim_lsp").default_capabilities(),
--   settings = { ["rust-analyzer"] = { cargo = { allFeatures = true } } },
-- })


